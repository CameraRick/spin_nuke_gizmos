#! /spin/software/nuke/6.3v8/linux/64/Nuke6.3 -nx
version 6.3 v8
Gizmo {
 inputs 4
 help "Addive keyer usage:\n\nfg = bluescreen plate\nbg = background \nplate\nref = constant colour node with the colour of your blues in your \nbluescreen plate\n\nnote: this works for any colour extraction , green, \nred etc .I'm just using blue as an example\n\nThis keyer is for help \nextracting very fine hairs and light details in your key that you \nwould\n not be able to achieve using a straight bluescreen keyer. It \ndoes not create a matte.\n The result of this keyer is what you now need \nto use as your bg, placing your exaction over it.\n You can also use the \nresult through an edge matte. If your blue screen is very uneven this \nmay\n be the best use of this tool. Keep in mind if you can use the \nwhole plate though this tool it will\nretain the grain from the bs \nmaking a much nicer intergration of grain to comp.\n\n\n\n\n\n"
 addUserKnob {20 "" l User}
 addUserKnob {26 "" l Additive}
 addUserKnob {4 cspace l "colour space" t "colour space for the \ninternal math.\nIf set to log all inputs are converted to log before the \nmath is applied. The result is converted back to linear space." M {log lin}}
 cspace lin
 addUserKnob {7 saturation R 0 3}
 saturation 0.34
 addUserKnob {7 fade R 0 5}
 fade 1
 addUserKnob {7 brightness R -1 1}
 addUserKnob {18 tint}
 tint {1 1 1}
 addUserKnob {6 clampblk l "clamp blacks" t "check this to avoid \nnegative values in the key result" -STARTLINE}
 clampblk true
 addUserKnob {6 usematte l "use edge matte" t "this will premultiply \nthe result by the alpha channel of the edge input" -STARTLINE}
 addUserKnob {26 "" l Negative}
 addUserKnob {7 saturation_neg l saturation}
 saturation_neg 0.1
 addUserKnob {7 brightness_neg l brightness R 0 5}
 brightness_neg 1
 addUserKnob {18 tint_neg l tint}
 tint_neg {0.07 0.08 0.08}
 addUserKnob {26 "" l "Mix Negative into Additve"}
 addUserKnob {7 Dissolve2_which l Mix t "This alows you to mix some \ndarks back\n into the highlights incase they are too strong.\n"}
}
 Input {
  inputs 0
  name edge
  xpos -682
  ypos 1016
  number 3
 }
add_layer {rgba rgba.water}
 AddChannels {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  name AddChannels1
  xpos -682
  ypos 1054
 }
 Input {
  inputs 0
  name fg
  xpos -529
  ypos 110
 }
set N1040a2a0 [stack 0]
 Log2Lin {
  operation lin2log
  name Log2Lin2
  xpos -331
  ypos 110
  disable {{parent.cspace}}
 }
 Input {
  inputs 0
  name ref
  xpos -132
  ypos -49
  number 2
 }
set N50c3520 [stack 0]
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos -132
  ypos 24
  disable {{parent.cspace}}
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge1
  xpos -132
  ypos 110
 }
 Clamp {
  maximum_enable false
  name Clamp1
  xpos -14
  ypos 103
  disable {{1-parent.clampblk}}
 }
set N130a3960 [stack 0]
 Input {
  inputs 0
  name bg
  xpos 372
  ypos -25
  number 1
 }
set N116386d0 [stack 0]
 Log2Lin {
  operation lin2log
  name Log2Lin3
  xpos 372
  ypos 13
  disable {{parent.cspace}}
 }
set N10638b60 [stack 0]
 Remove {
  operation keep
  channels rgb
  name Remove2
  xpos 252
  ypos 13
 }
add_layer {shadow}
 Shuffle {
  in rgb
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  xpos 150
  ypos 13
 }
 Merge2 {
  inputs 2
  operation difference
  name Merge2
  xpos 150
  ypos 242
 }
 Saturation {
  saturation 0
  name Saturation2
  xpos 150
  ypos 283
 }
set N13308740 [stack 0]
 Dot {
  name Dot1
  xpos -216
  ypos 287
 }
 Dot {
  name Dot4
  xpos -216
  ypos 510
 }
push $N1040a2a0
 Dot {
  name Dot2
  xpos -495
  ypos 288
 }
push $N50c3520
 Dot {
  name Dot3
  xpos -380
  ypos -45
 }
 Merge2 {
  inputs 2
  operation min
  name Merge5
  xpos -414
  ypos 284
 }
push $N1040a2a0
 Dot {
  name Dot5
  xpos -495
  ypos 391
 }
 Merge2 {
  inputs 2
  operation divide
  Achannels {rgba.red rgba.green rgba.blue -rgba.red}
  name Merge4
  xpos -414
  ypos 387
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  name Copy3
  xpos -414
  ypos 499
 }
 Multiply {
  value {{parent.balance}}
  maskChannelInput forward.u
  name Multiply1
  xpos -414
  ypos 551
 }
 Shuffle {
  black red
  out2 forward
  name Shuffle2
  xpos -414
  ypos 603
 }
set N16b260e0 [stack 0]
 Saturation {
  channels rgba
  saturation {{parent.saturation_neg i x390 1.9}}
  name Saturation3
  xpos -268
  ypos 603
 }
 Multiply {
  channels rgba
  value {{parent.brightness_neg}}
  name Multiply3
  xpos -268
  ypos 649
 }
 Grade {
  multiply {{parent.tint_neg.r i} {parent.tint_neg.g i} {parent.tint_neg.b i} {curve}}
  black_clamp false
  name Grade2
  xpos -268
  ypos 693
 }
push $N16b260e0
 Clamp {
  channels forward
  name Clamp2
  xpos -414
  ypos 641
 }
 Dissolve {
  inputs 2
  which 1
  maskChannelInput forward.u
  invert_mask true
  name Dissolve1
  xpos -414
  ypos 686
 }
push $N116386d0
 Dot {
  name Dot6
  xpos 406
  ypos 844
 }
 Merge {
  inputs 2
  operation mult
  name Merge6
  xpos -414
  ypos 840
 }
push $N13308740
 Dot {
  name Dot7
  xpos 184
  ypos 432
 }
push $N130a3960
 Saturation {
  saturation {{parent.saturation i}}
  name Saturation1
  xpos -14
  ypos 287
 }
 Multiply {
  channels rgba
  value {{parent.fade x390 2}}
  name Multiply2
  xpos -14
  ypos 325
 }
 Grade {
  multiply {{parent.tint.r i} {parent.tint.g i} {parent.tint.b i} {curve}}
  black_clamp false
  name Grade1
  xpos -14
  ypos 372
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  name Copy1
  xpos -14
  ypos 421
 }
 Add {
  channels rgb
  value {{parent.brightness}}
  maskChannelInput forward.u
  name Add1
  xpos -14
  ypos 473
 }
push $N10638b60
 Dot {
  name Dot8
  xpos 406
  ypos 529
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos -14
  ypos 525
 }
 Log2Lin {
  name Log2Lin4
  xpos -14
  ypos 582
  disable {{parent.cspace}}
 }
 Dot {
  name Dot9
  xpos 20
  ypos 955
 }
 Dissolve {
  inputs 2
  which {{parent.Dissolve2_which}}
  maskChannelInput -forward.u
  invert_mask true
  name Dissolve2
  xpos -414
  ypos 944
 }
set N15bd1510 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -545
  ypos 1054
 }
 Premult {
  name Premult1
  xpos -545
  ypos 1106
 }
push $N15bd1510
 Switch {
  inputs 2
  which {{parent.usematte}}
  name Switch1
  xpos -414
  ypos 1106
 }
 Output {
  name Output1
  xpos -414
  ypos 1216
 }
end_group
